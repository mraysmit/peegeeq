<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dev.mars</groupId>
        <artifactId>peegeeq</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>peegeeq-db</artifactId>
    <packaging>jar</packaging>

    <name>PeeGeeQ DB</name>
    <description>PostgreSQL connectivity for PeeGeeQ services</description>

    <dependencies>
        <!-- Module Dependencies -->
        <dependency>
            <groupId>dev.mars</groupId>
            <artifactId>peegeeq-api</artifactId>
        </dependency>

        <!-- PostgreSQL Driver -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- Connection Pooling - TEST SCOPE ONLY -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Vert.x Reactive Database Clients -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-pg-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-sql-client</artifactId>
        </dependency>

        <!-- SCRAM Authentication for PostgreSQL -->
        <dependency>
            <groupId>com.ongres.scram</groupId>
            <artifactId>scram-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ongres.scram</groupId>
            <artifactId>scram-common</artifactId>
        </dependency>

        <!-- JSON Processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- Metrics and Monitoring -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <!-- Resilience -->
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-circuitbreaker</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-ratelimiter</artifactId>
        </dependency>
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-micrometer</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- Concurrency Utilities -->

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-api</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- TestContainers -->
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Test Utilities -->
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <release>21</release>
                </configuration>
            </plugin>

            <!-- Maven Surefire Plugin for Test Categorization -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <!-- Use profile-based configuration -->
                    <groups>${test.groups}</groups>
                    <excludedGroups>${test.excludedGroups}</excludedGroups>

                    <!-- Parallel execution configuration from profiles -->
                    <parallel>${test.parallel}</parallel>
                    <threadCount>${test.threadCount}</threadCount>
                    <perCoreThreadCount>true</perCoreThreadCount>

                    <!-- Stop after first failure for fast feedback -->
                    <skipAfterFailureCount>1</skipAfterFailureCount>

                    <!-- System properties for test configuration -->
                    <systemPropertyVariables>
                        <peegeeq.performance.tests>${peegeeq.performance.tests}</peegeeq.performance.tests>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <!-- Test Execution Profiles -->
    <profiles>
        <!-- Core Tests - Fast unit tests (DEFAULT) -->
        <profile>
            <id>core-tests</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <test.groups>core</test.groups>
                <test.excludedGroups>integration,performance,slow,flaky</test.excludedGroups>
                <test.parallel>methods</test.parallel>
                <test.threadCount>4</test.threadCount>
            </properties>
        </profile>

        <!-- Integration Tests - With real infrastructure -->
        <profile>
            <id>integration-tests</id>
            <properties>
                <test.groups>integration</test.groups>
                <test.excludedGroups>performance,slow,flaky</test.excludedGroups>
                <test.parallel>classes</test.parallel>
                <test.threadCount>2</test.threadCount>
            </properties>
        </profile>

        <!-- Performance Tests - Load and throughput -->
        <profile>
            <id>performance-tests</id>
            <properties>
                <test.groups>performance</test.groups>
                <test.excludedGroups>flaky</test.excludedGroups>
                <test.parallel>none</test.parallel>
                <test.threadCount>1</test.threadCount>
                <peegeeq.performance.tests>true</peegeeq.performance.tests>
            </properties>
        </profile>

        <!-- Smoke Tests - Ultra-fast basic verification -->
        <profile>
            <id>smoke-tests</id>
            <properties>
                <test.groups>smoke</test.groups>
                <test.excludedGroups>integration,performance,slow,flaky</test.excludedGroups>
                <test.parallel>methods</test.parallel>
                <test.threadCount>8</test.threadCount>
            </properties>
        </profile>

        <!-- All Tests - Everything except flaky -->
        <profile>
            <id>all-tests</id>
            <properties>
                <test.groups>core,integration,performance,slow</test.groups>
                <test.excludedGroups>flaky</test.excludedGroups>
                <test.parallel>classes</test.parallel>
                <test.threadCount>2</test.threadCount>
                <peegeeq.performance.tests>true</peegeeq.performance.tests>
            </properties>
        </profile>

        <!-- Full Tests - Absolutely everything -->
        <profile>
            <id>full-tests</id>
            <properties>
                <test.groups>core,integration,performance,slow,flaky</test.groups>
                <test.excludedGroups></test.excludedGroups>
                <test.parallel>classes</test.parallel>
                <test.threadCount>1</test.threadCount>
                <peegeeq.performance.tests>true</peegeeq.performance.tests>
            </properties>
        </profile>
    </profiles>

</project>
