<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>dev.mars</groupId>
        <artifactId>peegeeq</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <artifactId>peegeeq-service-manager</artifactId>
    <name>PeeGeeQ Service Manager</name>
    <description>Service discovery and federation manager for PeeGeeQ instances</description>

    <dependencies>
        <!-- PeeGeeQ Dependencies -->
        <dependency>
            <groupId>dev.mars</groupId>
            <artifactId>peegeeq-api</artifactId>
        </dependency>

        <!-- Vert.x Dependencies -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-consul-client</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-service-discovery</artifactId>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-client</artifactId>
        </dependency>

        <!-- JSON Processing -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- Metrics -->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
        </dependency>

        <!-- Resilience -->
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-circuitbreaker</artifactId>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-junit5</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>consul</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <!-- Maven Surefire Plugin 3.2.5 for JUnit 5 test execution with tag-based categorization -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.2.5</version>
                <configuration>
                    <!-- Tag-based test filtering -->
                    <groups>${test.groups}</groups>
                    <excludedGroups>${test.excludedGroups}</excludedGroups>

                    <!-- Parallel execution configuration -->
                    <parallel>${test.parallel}</parallel>
                    <threadCount>${test.threadCount}</threadCount>
                    <perCoreThreadCount>false</perCoreThreadCount>
                    <useUnlimitedThreads>false</useUnlimitedThreads>

                    <!-- JUnit 5 configuration -->
                    <properties>
                        <configurationParameters>
                            junit.jupiter.execution.timeout.default=${test.timeout.default}
                            junit.jupiter.execution.timeout.testmethod.default=${test.timeout.method}
                        </configurationParameters>
                    </properties>

                    <!-- Test execution behavior -->
                    <skipAfterFailureCount>1</skipAfterFailureCount>
                    <trimStackTrace>false</trimStackTrace>
                    <useFile>true</useFile>
                    <printSummary>true</printSummary>
                </configuration>
            </plugin>

            <!-- Exec plugin for running the service manager -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <configuration>
                    <mainClass>dev.mars.peegeeq.servicemanager.PeeGeeQServiceManager</mainClass>
                    <args>
                        <arg>9090</arg>
                    </args>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Core Tests Profile - Fast unit tests for daily development -->
        <profile>
            <id>core-tests</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <test.groups>core</test.groups>
                <test.excludedGroups>integration,performance,slow,flaky</test.excludedGroups>
                <test.parallel>methods</test.parallel>
                <test.threadCount>4</test.threadCount>
                <test.timeout.default>30s</test.timeout.default>
                <test.timeout.method>10s</test.timeout.method>
            </properties>
        </profile>

        <!-- Integration Tests Profile - Tests with TestContainers and real infrastructure -->
        <profile>
            <id>integration-tests</id>
            <properties>
                <test.groups>integration</test.groups>
                <test.excludedGroups>performance,slow,flaky</test.excludedGroups>
                <test.parallel>classes</test.parallel>
                <test.threadCount>2</test.threadCount>
                <test.timeout.default>5m</test.timeout.default>
                <test.timeout.method>3m</test.timeout.method>
            </properties>
        </profile>

        <!-- Performance Tests Profile - Load and throughput tests -->
        <profile>
            <id>performance-tests</id>
            <properties>
                <test.groups>performance</test.groups>
                <test.excludedGroups>slow,flaky</test.excludedGroups>
                <test.parallel>none</test.parallel>
                <test.threadCount>1</test.threadCount>
                <test.timeout.default>10m</test.timeout.default>
                <test.timeout.method>5m</test.timeout.method>
            </properties>
        </profile>

        <!-- Smoke Tests Profile - Ultra-fast basic verification -->
        <profile>
            <id>smoke-tests</id>
            <properties>
                <test.groups>smoke</test.groups>
                <test.excludedGroups>integration,performance,slow,flaky</test.excludedGroups>
                <test.parallel>methods</test.parallel>
                <test.threadCount>8</test.threadCount>
                <test.timeout.default>10s</test.timeout.default>
                <test.timeout.method>5s</test.timeout.method>
            </properties>
        </profile>

        <!-- Slow Tests Profile - Long-running comprehensive tests -->
        <profile>
            <id>slow-tests</id>
            <properties>
                <test.groups>slow</test.groups>
                <test.excludedGroups>flaky</test.excludedGroups>
                <test.parallel>none</test.parallel>
                <test.threadCount>1</test.threadCount>
                <test.timeout.default>30m</test.timeout.default>
                <test.timeout.method>15m</test.timeout.method>
            </properties>
        </profile>

        <!-- All Tests Profile - Run all tests except flaky ones -->
        <profile>
            <id>all-tests</id>
            <properties>
                <test.groups>core,integration,performance,slow</test.groups>
                <test.excludedGroups>flaky</test.excludedGroups>
                <test.parallel>classes</test.parallel>
                <test.threadCount>2</test.threadCount>
                <test.timeout.default>30m</test.timeout.default>
                <test.timeout.method>15m</test.timeout.method>
            </properties>
        </profile>
    </profiles>
</project>
