#!/bin/bash

# Pre-commit hook to prevent hardcoded PostgreSQL versions
# Place this file in .git/hooks/pre-commit and make it executable

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîç Checking for hardcoded PostgreSQL versions...${NC}"

# Get list of staged Java files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.java$' || true)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}‚úÖ No Java files staged for commit.${NC}"
    exit 0
fi

# Check each staged file for hardcoded PostgreSQL versions
VIOLATIONS_FOUND=false

for file in $STAGED_FILES; do
    if [ -f "$file" ]; then
        # Skip the constants file itself
        if [[ "$file" == *"PostgreSQLTestConstants.java" ]]; then
            continue
        fi
        
        # Check for hardcoded PostgreSQL versions
        if grep -q 'new PostgreSQLContainer<>("postgres:' "$file"; then
            if [ "$VIOLATIONS_FOUND" = false ]; then
                echo ""
                echo -e "${RED}‚ùå COMMIT BLOCKED: Hardcoded PostgreSQL versions detected!${NC}"
                echo ""
                VIOLATIONS_FOUND=true
            fi
            
            echo -e "${RED}üìÑ File: $file${NC}"
            grep -n 'new PostgreSQLContainer<>("postgres:' "$file" | sed 's/^/   Line /'
            echo ""
        fi
    fi
done

if [ "$VIOLATIONS_FOUND" = true ]; then
    echo -e "${YELLOW}üîß To fix these violations:${NC}"
    echo ""
    echo "1. Add the import:"
    echo "   import dev.mars.peegeeq.test.PostgreSQLTestConstants;"
    echo ""
    echo "2. Replace hardcoded versions:"
    echo -e "   ${RED}‚ùå new PostgreSQLContainer<>(\"postgres:15\")${NC}"
    echo -e "   ${GREEN}‚úÖ new PostgreSQLContainer<>(PostgreSQLTestConstants.POSTGRES_IMAGE)${NC}"
    echo ""
    echo "3. Or use the helper methods:"
    echo -e "   ${GREEN}‚úÖ PostgreSQLTestConstants.createStandardContainer()${NC}"
    echo -e "   ${GREEN}‚úÖ PostgreSQLTestConstants.createContainer(\"db\", \"user\", \"pass\")${NC}"
    echo ""
    echo -e "${BLUE}üí° Run the migration script to fix all files:${NC}"
    echo "   ./scripts/migrate-postgresql-versions.sh"
    echo ""
    echo -e "${RED}Commit aborted. Please fix the violations and try again.${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ No hardcoded PostgreSQL versions found in staged files.${NC}"
exit 0
