# PeeGeeQ BiTemporal Test Execution Profiles
# Reference file showing measured execution times and profile configurations

# =============================================================================
# MEASURED EXECUTION TIMES (as of 2025-10-26)
# =============================================================================

# Core Tests (FAST - Development Feedback)
core-tests.measured-time=7.6s
core-tests.description=Fast unit tests for immediate development feedback
core-tests.includes=@Tag("core")
core-tests.excludes=integration,performance,slow,flaky
core-tests.parallel=methods
core-tests.thread-count=4

# Integration Tests (MODERATE - CI/CD Pipeline)
integration-tests.measured-time=23.3s
integration-tests.description=Tests with TestContainers and real PostgreSQL
integration-tests.includes=@Tag("integration")
integration-tests.excludes=core,performance,slow,flaky
integration-tests.parallel=classes
integration-tests.thread-count=2

# Performance Tests (SLOW - Nightly Builds)
performance-tests.measured-time=Not yet measured
performance-tests.description=Performance benchmarks and load tests
performance-tests.includes=@Tag("performance")
performance-tests.excludes=core,integration,slow,flaky
performance-tests.parallel=none
performance-tests.thread-count=1

# Smoke Tests (ULTRA-FAST - Quick Validation)
smoke-tests.measured-time=Not yet measured
smoke-tests.description=Ultra-fast basic functionality validation
smoke-tests.includes=@Tag("smoke")
smoke-tests.excludes=integration,performance,slow,flaky
smoke-tests.parallel=methods
smoke-tests.thread-count=8

# Slow Tests (VERY SLOW - Manual Execution)
slow-tests.measured-time=Not yet measured
slow-tests.description=Long-running comprehensive tests
slow-tests.includes=@Tag("slow")
slow-tests.excludes=core,integration,performance,flaky
slow-tests.parallel=none
slow-tests.thread-count=1

# All Tests (COMPREHENSIVE - Pre-Release)
all-tests.measured-time=Not yet measured
all-tests.description=All tests except flaky ones
all-tests.includes=core,integration,performance,slow,smoke
all-tests.excludes=flaky
all-tests.parallel=classes
all-tests.thread-count=2

# Full Tests (COMPLETE - Release Validation)
full-tests.measured-time=Not yet measured
full-tests.description=Complete test suite including flaky tests
full-tests.includes=core,integration,performance,slow,smoke,flaky
full-tests.excludes=none
full-tests.parallel=classes
full-tests.thread-count=2

# =============================================================================
# USAGE EXAMPLES
# =============================================================================

# Development Workflow (Recommended)
# 1. mvn test -Pcore-tests           (~7.6s - immediate feedback)
# 2. mvn test -Pintegration-tests    (~23.3s - before commit)
# 3. mvn test -Pall-tests            (~30s+ - before push)

# CI/CD Pipeline Stages
# Stage 1: mvn test -Pcore-tests     (Fast feedback)
# Stage 2: mvn test -Pintegration-tests (Database validation)
# Stage 3: mvn test -Pall-tests      (Comprehensive validation)

# Manual Testing
# Quick check: mvn test -Psmoke-tests
# Full validation: mvn test -Pfull-tests

# =============================================================================
# CATEGORIZATION STATUS
# =============================================================================

# ✅ CATEGORIZED (4 test files):
# - TransactionParticipationTest.java → CORE
# - PgBiTemporalEventStoreTest.java → INTEGRATION  
# - JsonbConversionValidationTest.java → INTEGRATION
# - BiTemporalPerformanceBenchmarkTest.java → PERFORMANCE (disabled)

# ⏳ REMAINING TO CATEGORIZE (~14 test files):
# - BiTemporalEventStoreExampleTest.java
# - BiTemporalQueryEdgeCasesTest.java
# - PeeGeeQBiTemporalIntegrationTest.java
# - PeeGeeQBiTemporalWorkingIntegrationTest.java
# - PgBiTemporalEventStoreIntegrationTest.java
# - ReactiveNotificationHandlerIntegrationTest.java
# - ReactiveNotificationTest.java
# - TransactionParticipationIntegrationTest.java
# - TransactionalBiTemporalExampleTest.java
# - VertxPerformanceOptimizationExampleTest.java
# - VertxPerformanceOptimizationValidationTest.java
# - And others...

# =============================================================================
# PERFORMANCE TARGETS
# =============================================================================

# Core Tests: < 10 seconds (✅ Currently 7.6s)
# Integration Tests: < 30 seconds (✅ Currently 23.3s)
# Performance Tests: < 2 minutes (⏳ Not yet measured)
# Smoke Tests: < 5 seconds (⏳ Not yet measured)
# All Tests: < 5 minutes (⏳ Not yet measured)

# =============================================================================
# NOTES
# =============================================================================

# - Times measured on Windows development machine
# - TestContainers startup overhead included in integration tests
# - Performance may vary based on system resources and Docker performance
# - Update this file when adding new test categories or measuring new times
